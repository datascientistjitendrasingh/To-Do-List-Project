import os

def show_tasks(tasks):
    if not tasks:
        print("No tasks found.")
    else:
        for i, task in enumerate(tasks, 1):
            print(f"{i}. {task}")

def add_task(tasks, new_task):
    tasks.append(new_task)
    print("Task added successfully.")

def mark_task_completed(tasks, index):
    if 1 <= index <= len(tasks):
        tasks[index - 1] = f"[Completed] {tasks[index - 1]}"
        print("Task marked as completed successfully.")
    else:
        print("Invalid task index.")

def delete_task(tasks, index):
    if 1 <= index <= len(tasks):
        deleted_task = tasks.pop(index - 1)
        print(f"Task '{deleted_task}' deleted successfully.")
    else:
        print("Invalid index.")

def save_tasks_to_file(file_path, tasks):
    with open(file_path, "w") as file:
        for task in tasks:
            file.write(f"{task}\n")

def load_tasks_from_file(file_path):
    tasks = []
    if os.path.exists(file_path):
        with open(file_path, "r") as file:
            tasks = file.read().splitlines()
    return tasks

def main():
    file_path = "To-Do Lists.txt"
    tasks = load_tasks_from_file(file_path)

    while True:
        print("\n==== To-Do List ====")
        print("1. Show Tasks")
        print("2. Add Task")
        print("3. Mark Task as Completed")
        print("4. Delete Task")
        print("5. Save and Exit")

        choice = input("Enter your choice (1-5): ")

        if choice == "1":
            show_tasks(tasks)
        elif choice == "2":
            new_task = input("Enter the task to add: ")
            add_task(tasks, new_task)
        elif choice == "3":
            index_to_complete = int(input("Enter the task index to mark as completed: "))
            mark_task_completed(tasks, index_to_complete)
        elif choice == "4":
            index_to_delete = int(input("Enter the task index to delete: "))
            delete_task(tasks, index_to_delete)
        elif choice == "5":
            save_tasks_to_file(file_path, tasks)
            print("Tasks saved and exiting...")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
